{
    "collab_server" : "",
    "contents" : "#SEIRD model for evaluating different estimates of R0\n\n#Step 1 load packages\nlibrary(deSolve)\n\n#define function\nSEIRD_fun<- function(current_timepoint, state_values, parameters)\n{\n  \n  #creat state variables (local variables)\n  S<-state_values[1] # Susceptible \n  E<-state_values[2] # Exposed\n  I<-state_values[3] #  Infectious\n  \n  R<-state_values[4] # Recovered \n  D<-state_values[5]#Died\n  with(\n    as.list(parameters), #variable names within parameters can be used\n    {\n      #compute derivative\n      \n      dS <- -beta*S*I/N\n      \n      dE <- beta*S*I/N- sigma*E\n      \n      dI <- sigma*E - gamma*I- delta*I\n      \n      dR <- gamma*I\n      dD<- delta*I\n      \n      \n      \n      #combine results\n      results=c(dS,dE,dI,dR,dD)\n      list(results)\n    }\n  )\n}\n\n\n\n\n#compartment durations\n\nincubation_period=5 \ninfectious_period=7 \n\n#force of infection\nR0=2.21 #mean 2.21, range 1.354-3.85\neffective_contact_rate_per_infectious_per_time= R0/infectious_period #\n\n\nbeta = effective_contact_rate_per_infectious_per_time\n\n\n# total outflows from compartments\nE_outflow = 1/incubation_period\n\nI_outflow_recovery_death = 1/infectious_period\n\n#progression rates from Exposed to Infectious\nsigma = E_outflow \n#mortality\nproportion_mortality_from_I=0.05\ndelta= proportion_mortality_from_I*I_u_outflow_recovery_death\n#Recovery rate\n\ngamma = I_outflow_recovery_death-delta\n\n\n\n\n#list parameters\n\nparameter_list<- c(beta=beta, \n                   sigma=sigma, \n                   delta=delta,\n                   gamma=gamma)\n#compartment population \nN=4e+06\nE0= N*0.0 #4000\nI0=N*0.00025 #1000\n\nR0=N*0 #200\nD0=0\nS0= N-(E0+I0+R0+D0)\n\ninitial_values <- c(S=S0,E=E0,\n                    I=I0,\n                    R=R0, D=D0)\ntimes=seq(0, 365, by = 1)\n\noutput_SEIRD=as.data.frame(lsoda(initial_values, times, SEIRD_fun, parameter_list))\n\n\n#Check total population N=4e+06\noutput_SEIRD$N_t<- output_SEIRD$S + output_SEIRD$E + output_SEIRD$I  + output_SEIRD$R +output_SEIRD$D \nView(output_SEIRD)\nplot(output_SEIRD$time,output_SEIRD$N_t,type = 'l')\n####DATA\n#R0_mean\nData_ro<- output_SEIRD[,c(\"time\",\"I\",\"D\")]\n#R0_lower LImit\nData_ro$I_r0_min<-output_SEIRD$I \nData_ro$D_r0_min<-output_SEIRD$D \n#R0_upperlimit\nData_ro$I_r0_max<-output_SEIRD$I \nData_ro$D_r0_max<-output_SEIRD$D\n\nView(Data_ro)\n#save data as CSV\nwrite.csv(Data_ro,\"R0_value_ranges\")\n\n#PLOT\n#PLOT infectious cases for each RO\nplot(Data_ro$time,Data_ro$I,\n     ylim = c(0,1e+06),\n     type=\"n\",\n     xlab='Time in days',\n     ylab = 'Number of cases', main=\"Infectious cases\",\n     panel.first= grid())\n\nlines(Data_ro$time,Data_ro$I,lwd=3,col='darkgreen')\nlines(Data_ro$time,Data_ro$I_r0_min,lwd=3,col='blue')\nlines(Data_ro$time,Data_ro$I_r0_max,lwd=3,col=\"red\")\n\nlegend('topright',c(\"R0=3.85\",\"R0=2.21\",\n                    \"R0=1.354\"),\n       lty=c(1,1,1),lwd=c(3,3,3),\n       col=c(\"red\",\"darkgreen\",'blue'))\n\n\n#PLOT death for each RO\nplot(Data_ro$time,Data_ro$D,\n     ylim = c(0,1e+06),\n     type=\"n\",\n     xlab='Time in days',\n     ylab = 'Number of deaths', main=\"Death\",\n     panel.first= grid())\n\nlines(Data_ro$time,Data_ro$D,lwd=3,col='darkgreen')\nlines(Data_ro$time,Data_ro$D_r0_min,lwd=3,col='blue')\nlines(Data_ro$time,Data_ro$D_r0_max,lwd=3,col=\"red\")\n\nlegend('topright',c(\"R0=3.85\",\"R0=2.21\",\n                    \"R0=1.354\"),\n       lty=c(1,1,1),lwd=c(3,3,3),\n       col=c(\"red\",\"darkgreen\",'blue'))\n\n\n\n\n\n\n\n\n\n\n\n",
    "created" : 1591424817352.000,
    "dirty" : false,
    "encoding" : "WINDOWS-1252",
    "folds" : "",
    "hash" : "56172492",
    "id" : "F7EBBAB",
    "lastKnownWriteTime" : 1591509686,
    "last_content_update" : 1591509686209,
    "path" : "~/R-course/COVID19/Model from EPHI/ABREN/EPHI_model/SEIRD_for_range_R0.r",
    "project_path" : "SEIRD_for_range_R0.r",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}